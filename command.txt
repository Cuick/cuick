








============================================================
         ★ 学习链接 ★
============================================================

http://www.jianshu.com/notebooks/293635/latest   django + pure

上文作者博客
http://andrewliu.in/

====
twisted：
http://blog.chinaunix.net/uid-7684977-id-2569706.html
https://my.oschina.net/1123581321/blog/160654
======

http://mclspace.com/
http://www.cnblogs.com/fakis/
http://bbs.c114.net/thread-880707-1-1.html 面试经历
http://www.acmerblog.com/ acm比赛
http://www.oschina.net/project/zh/ 开源项目国内
http://python.ctolib.com/
http://www.cnblogs.com/Wayou/p/requestAnimationFrame.html   html5跑车原理
http://developer.egret.com/cn/ HTML5 引擎
http://bbs.zzfriend.com/thread-2738-1-1.html  html5 打飞机
http://www.itmian4.com/forum.php?mod=viewthread&tid=7774&_dsign=4c0bb21e 书单
http://www.csdn.net/article/2014-10-27/2822292-how-league-of-legends-scaled-chat-to-70-million-players eralng LOL700万在线chat服务器
http://blog.csdn.net/neil3d/article/details/39104329 炉石传说
https://toutiao.io/ 开发者头条
http://www.kuqin.com/shuoit/20151105/348778.html docker
ejabberd是基于Jabber/XMPP协议的即时通讯服务器，由GPLv2授权（免费和开放源码），采用Erlang/OTP开发。它的特点是，跨平台，容错，集群和模块化
http://www.wklken.me/posts/2013/08/18/python-extra-functools.html python functools模块
http://www.cnblogs.com/qq78292959/archive/2012/05/08/2490443.html  ulimit

http://www.wklken.me/posts/2013/08/17/130-essential-vim-commands.html vim技巧
http://www.colobu.com/2014/10/09/gitbook-quickstart/ gitbook教程
http://www.kuqin.com/shuoit/20161114/353046.html  python内存优化
http://www.myhack58.com/Article/48/66/2011/31764.htm 服务器ssh攻防
http://www.cnblogs.com/jasmine-Jobs/p/5880271.html  ssh安装配置
http://blog.csdn.net/weiweicao0429/article/details/9113229  python rsa加解密
http://mp.weixin.qq.com/s/U3hrfgbZZsWHEbxY0qK-Vw  职业规划

http://xlambda.com/gevent-tutorial/  gevent


===========================================================

ngrok  内网穿透
WooYun 网络安全相关










============================================================
         项目
============================================================
hget stat:2:2016-10-10 in.diamond*
主播号：400 sdiff 'game.2.live.telecast.user'
barrel_level 54
pay_total 10000
hmset props:2:20040 201 10000 202 10000 203 10000 204 10000 205 10000 206 10000 208 10000 209 10000 210 10000 211 10000 212 10000 213 10000 214 10000 215 10000 216 10000 217 10000 218 10000 219 10000 220 10000
hmset game:2:20040 chip 100000000 diamond 10000000 pay_total 10000  barrel_level 54

http://192.168.1.35/   管理员用户 admin 密码 admin;
yisilong  123456
incrby ip.limit.120.52.94.151 -100000    cache

Tornado 

程序: 101.200.186.126(10.44.171.87) 
主库: 10.44.169.141 
从库: 10.44.167.229


http://lybntest.dapai1.com/buniao_manage/loginy.html
bn_dev
123456a

================


1. 初级场、中级场钻石获得上限调整为500

2. 掉落道具和钻石概率提高至30%

3. 新用户第一次抽奖必中蛋（当用户奖池够抽蛋时）（半天）

4. 新用户打普通BOSS掉蛋，第一次必掉1铜蛋（半天）

5. 非付费新手保护：打到分数1W以下，增加爆率200%，直至分数上涨到5W，爆率恢复正常，每个新用户有两次机会
付费新手保护：打到分数1W以下，增加爆率200%，直至分数上涨只充值金额*2W，每个新用户限前三笔充值（可累计），最高限额1000W（两天）

别的渠道消耗金币
别的渠道获得金币


6. 新用户签到：（一天）
第一天奖励不变  第二天奖励钻石*100  第三天奖励铜蛋*1 第四天奖励不变
第五天奖励银蛋*1 第六天奖励不变第七天奖励金蛋*1






===========================================================

★ script/game.sh
readlink 获取文件或目录绝对路径
dirname 获取文件或目录所在的目录

ulimit -c unlimited 设置core文件大小为不限制大小

$0 Shell本身的文件名
$1～$n 添加到Shell的各参数值。$1是第1参数、$2是第2参数…
$$ Shell本身的PID（ProcessID）
$! Shell最后运行的后台Process的PID
$? 最后运行的命令的结束代码（返回值）
$- 使用Set命令设定的Flag一览
$* 所有参数列表。如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有数。
$@ 所有参数列表。如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。
$# 添加到Shell的参数个数









===========================================================
                     ★ linux ★
===========================================================
grep 219.*on_resolve_st
one *2016-09-09

grep '219.*present.props' bi-*2016-09-09 > zzz.txt

echo "" > aa && curl -d '{"userId":20001,"chip":3224,"gameId":2,"token":"aXh4b28ubWVAZ21haWwuY29tCg=="}' "http://192.168.1.35:19000/v1/shell/reward/chip" >> aa && cat aa

tar -zcvf hello.tar.gz hello.txt
tar -zxf niuniu.tar.gz

★ 删除项目下所有svn文件
find . -type d -name ".svn"|xargs rm -rf

★ ssh反向连接

★ ngrok

ps -ef可以看到进程的启动时间，但是这个时间如果超过24小时就只能看到年份了
ps -eO lstart  精确的启动时间




       vim tar.py
  627  ls
  628  rm tar.py
  629  ls
  630  ls |xargs -i  tar zcvf {}.tar.gz {}
  631  ls
  632  ls *.tar.gz
  633  rm *.tag.gz
  634  rm *.tar.gz
  635  ls
  636  rm aaa.txt
  637  ls
  638  rm 1.log
  639  ls
  640  cd tmp/
  641  ls
  642  ls |xargs -i  tar zcvf {}.tar.gz {}
  643  df -h
  644  ls
  645  du -sh
  646  mv *.tar.gz ../old/

       rm *.2016-05-*

===========================================================
          vim
===========================================================


1) 文件内全部替换：

:%s#abc#123#g (如文件内有#，可用/替换,:%s/abc/123/g)
  --注：把abc替换成123

(或者: %s/str1/str2/g 用str2替换文件中所有的str1）

2) 文件内局部替换：

 :20,30s#abc#123(如文件内有#，可用/替换,:%s/abc/123/g)
  --注：把20行到30行内abc替换成123



============================================================
                     ★ python ★
============================================================


计算md5
>>>> import hashlib
>>>> m=hashlib.md5()
>>>> m.update('\xe5\xb0\x8f\xe8\x82\x9b\xe8\x82\x9b123456')
>>>> m.hexdigest()

反射
自省


============================================================
                      ★ redis ★                         
============================================================



127.0.0.1:16400> hgetall "username:11:\xe5\xb0\x81\xe9\x94\x81\xe6\x88\x91\xe4\xb8\x80\xe7\x94\x9f"

redis-cli -p 16400
hgetall "username:11:\xe5\xb0\x8f"
redis-cli -p 16401
hgetall "order:10020001BwNcnDhU"
redis-cli -p 16380
hgetall user:86056





============================================================
                     ★ git ★
============================================================

创建一个tag
git tag release-2.4.4 -m "fix weixin pay"
提交一个tag
git push origin release-2.4.2
切换到某个tag
git checkout -b release-2.4.4 release-2.4.4


~/.gitconfig

[user]
    name = Cuick
    email = zxzxck@163.com
[color]
    status = auto
    diff = auto
    branch = auto
    interactive = auto
[alias]
    st = status
    ci = commit
    br = branch
    co = checkout
    unstage = reset HEAD
    last = log -1
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit


============================================================

============================================================
★ 三种应该知道的技能

1.期望价值管理。少吹牛逼多干实事。制造能力假象容易提高他人对自己过分的期望，所谓爬的高，摔得重。
2.阀值自控意识。对任何喜欢的东西要有“节欲”意识。喜欢吃的东西不要一次吃个尽兴，喜欢听的歌曲也不要单曲循环没完没了。所谓细水长流，把“快感”变成“慢感”，好东西才能长久。
3.应对时空扭曲。努力让自己的生活产生变化，不断进步，旅游交友，增加人生的宽度，使自己的生命经历更多，体验更多。


======================================================================


===========================================================
★ vim 替换

语法  :[addr]s/源字符串/目的字符串/[option]

全局替换命令   :%s/源字符串/目的字符串/g

[addr] 表示检索范围，省略时表示当前行。
如：“1，20” ：表示从第1行到20行；
“%” ：表示整个文件，同“1,$”；
“. ,$” ：从当前行到文件尾；
s : 表示替换操作

[option] : 表示操作类型
如：g 表示全局替换; 
c 表示进行确认
p 表示替代结果逐行显示（Ctrl + L恢复屏幕）；
省略option时仅对每行第一个匹配串进行替换；
如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义

下面是一些例子：
#将That or this 换成 This or that
:%s/\(That\) or \(this\)/\u\2 or \l\1/
―- 
#将句尾的child换成children
:%s/child\([ ,.;!:?]\)/children\1/g
―-
#将mgi/r/abox换成mgi/r/asquare
:g/mg\([ira]\)box/s//mg//my\1square/g    <=>  :g/mg[ira]box/s/box/square/g
―-
#将多个空格换成一个空格
:%s/  */ /g
―-
#使用空格替换句号或者冒号后面的一个或者多个空格
:%s/\([:.]\)  */\1 /g
―-
#删除所有空行
:g/^$/d
―-
#删除所有的空白行和空行
:g/^[  ][  ]*$/d
―-
#在每行的开始插入两个空白
:%s/^/>  /
―-
#在接下来的6行末尾加入.
:.,5/$/./
―-
#颠倒文件的行序
:g/.*/m0O  <=> :g/^/m0O
―-
#寻找不是数字的开始行,并将其移到文件尾部
:g!/^[0-9]/m$ <=> g/^[^0-9]/m$
―-
#将文件的第12到17行内容复制10词放到当前文件的尾部
:1,10g/^/12,17t$
~~~~重复次数的作用
―-
#将chapter开始行下面的第二行的内容写道begin文件中
:g/^chapter/.+2w>>begin
―-
:/^part2/,/^part3/g/^chapter/.+2w>>begin
―-
:/^part2/,/^part3/g/^chapter/.+2w>>begin|+t$

删除行尾逗号
:222,333s/,\+$//g

:%s/,/, /g
:%s/\s\+$//g


vim 格式化

#格式化全文
gg=G

#自动缩进当前行
==

#格式化当前光标接下来的10行
10=

#格式化选定的行
v（向上下选择）
=

#命令解释
gg    #跳转到文件首行
=     #应用缩进格式
G     #直到文件结束
========================================================

★ 算法复杂度

时间复杂度：执行算法所需要的计算工作量
空间复杂度：执行这个算法所需要的内存空间


========================================================


成为一个主程还需要什么
架构脉络明白了，但是细节根本不熟悉。
继续研究这套服务器，并深入学习python。
twisted，stackless 实现
==
这几天发现，贪多的去学语言没有用，都只是学习了一些皮毛，只是学了些语法。
应该耐下心来 把手里在用的学扎实，

VR时代就要到了
全民VR的时候 新的创新机遇















